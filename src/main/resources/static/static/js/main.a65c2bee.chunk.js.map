{"version":3,"sources":["Pages/Home/Components/Tipsport/MatchDetailRequest.tsx","Components/Header.tsx","Pages/Home/Components/NewRequestCard.tsx","Pages/Home/Components/Tipsport/NewMatchesWatcher.tsx","Pages/Home/Components/Tipsport/SportsOfferRequest.tsx","Pages/Home/Components/Tipsport/MatchesOfferRequest.tsx","Pages/Home/Components/NewTipsportRequestCard.tsx","Pages/Home/Components/RequestsCard.tsx","Pages/Home/Components/ChatsCard.tsx","Pages/Home/Home.tsx","App.tsx","index.tsx"],"names":["categoryTypes","AppBar","position","Toolbar","Typography","variant","createRequest","useState","url","keyword","newReq","setNewReq","chats","setChats","selectedChatId","setSelectedChat","useEffect","fetch","then","response","ok","json","chatId","console","log","statusText","catch","Card","CardContent","TextField","label","value","onChange","e","target","style","width","FormControl","InputLabel","Select","map","chat","MenuItem","key","userName","CardActions","display","Button","color","marginLeft","marginRight","disabled","length","onClick","newTipsportReq","setNewTipsportReq","matches","setMatches","COMPETITION","category","setCategory","labelId","id","ROOT","CATEGORY","SELECTION","SUPERSPORT","SUPERGROUP","SPORT","GROUP","MATCH","onBlur","List","match","ListItem","cursor","displayUrl","matchUrl","ListItemText","primary","description","tipsportApiUrl","requestTypes","apiUrl","emptyRequest","MatchDetails","selected","setSelected","float","SportsOffer","MatchesOffer","MatchesWatcher","MatchDetailRequest","SportsOfferRequest","MatchesOfferRequest","NewMatchesWatcher","requests","deleteRequest","loadRequests","Table","TableHead","TableRow","TableCell","TableBody","req","createdDate","href","finnished","Chip","scanUrl","openSuccess","setOpenSuccess","ch","method","Snackbar","open","autoHideDuration","onClose","elevation","severity","setRequests","email","alert","err","Grid","container","spacing","className","item","xs","lg","NewRequestCard","NewTipsportRequestCard","RequestsCard","filter","ChatsCard","App","Header","Home","ReactDOM","render","StrictMode","theme","createMuiTheme","palette","main","secondary","document","getElementById"],"mappings":"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","file":"static/js/main.a65c2bee.chunk.js","sourcesContent":["import React, { useState, Dispatch, SetStateAction } from \"react\";\nimport { TextField, List, ListItem, ListItemText, FormControl, Select, InputLabel, MenuItem } from \"@material-ui/core\";\nimport { Chat, Match } from \"../../../../Types/types\";\n\ntype propsType = {\n  newTipsportReq: { apiUrl: string; url: string; displayUrl: string; keyword: string };\n  setNewTipsportReq: (req: { apiUrl: string; url: string; displayUrl: string; keyword: string }) => void;\n  chats: Chat[];\n  selectedChatId: string;\n  setSelectedChat: Dispatch<SetStateAction<string>>;\n};\n\nenum categoryTypes {\n  ROOT = \"ROOT\",\n  CATEGORY = \"CATEGORY\",\n  SELECTION = \"SELECTION\",\n  SUPERSPORT = \"SUPERSPORT\",\n  SUPERGROUP = \"SUPERGROUP\",\n  SPORT = \"SPORT\",\n  GROUP = \"GROUP\",\n  COMPETITION = \"COMPETITION\",\n  MATCH = \"MATCH\",\n}\n\nexport default function ({ newTipsportReq, setNewTipsportReq, chats, selectedChatId, setSelectedChat }: propsType) {\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [category, setCategory] = useState<categoryTypes>(categoryTypes.COMPETITION);\n\n  const loadMatches = (url: string) => {\n    if (url.length >= 0) {\n      fetch(`/tipsport/v1/matches?url=${url}&categoryType=${category}`)\n        .then((response) => {\n          if (response.ok) {\n            response.json().then(setMatches);\n          } else {\n            console.log(response.statusText);\n          }\n        })\n        .catch(console.log);\n    }\n  };\n\n  return (\n    <>\n      <br />\n      <br />\n      <FormControl style={{ width: \"50%\" }}>\n        <InputLabel>Category type</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={category}\n          onChange={(e) => {\n            setCategory(e.target.value as categoryTypes);\n          }}\n        >\n          <MenuItem value={categoryTypes.ROOT}>Root</MenuItem>\n          <MenuItem value={categoryTypes.CATEGORY}>Category</MenuItem>\n          <MenuItem value={categoryTypes.SELECTION}>Selection</MenuItem>\n          <MenuItem value={categoryTypes.SUPERSPORT}>SuperSport</MenuItem>\n          <MenuItem value={categoryTypes.SUPERGROUP}>SuperGroup</MenuItem>\n          <MenuItem value={categoryTypes.SPORT}>Sport</MenuItem>\n          <MenuItem value={categoryTypes.GROUP}>Group</MenuItem>\n          <MenuItem value={categoryTypes.COMPETITION}>Competition</MenuItem>\n          <MenuItem value={categoryTypes.MATCH}>Match</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField label=\"Category URL\" style={{ width: \"100%\" }} onBlur={(e) => loadMatches(e.target.value)} />\n      {matches.length === 0 ? (\n        <>\n          <br />\n          <br />\n        </>\n      ) : (\n        <List>\n          {matches.map((match) => (\n            <ListItem\n              key={match.id}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                setNewTipsportReq({\n                  ...newTipsportReq,\n                  url: `https://m.tipsport.cz/rest/offer/v1/matches/${match.id}/event-tables?fromResults=false`,\n                  displayUrl: match.matchUrl,\n                });\n              }}\n            >\n              <ListItemText primary={match.description} />\n            </ListItem>\n          ))}\n        </List>\n      )}\n\n      <TextField\n        label=\"Url address\"\n        disabled={true}\n        value={newTipsportReq.url}\n        onChange={(e) => setNewTipsportReq({ ...newTipsportReq, url: e.target.value })}\n        style={{ width: \"100%\" }}\n      />\n      <TextField\n        label=\"Keyword\"\n        value={newTipsportReq.keyword}\n        onChange={(e) => setNewTipsportReq({ ...newTipsportReq, keyword: e.target.value })}\n        style={{ width: \"100%\" }}\n      />\n      <br />\n      <br />\n      <FormControl style={{ width: \"100%\" }}>\n        <InputLabel>Notification client</InputLabel>\n        <Select\n          value={selectedChatId}\n          onChange={(e) => {\n            setSelectedChat(e.target.value as string);\n          }}\n        >\n          {chats.map((chat) => (\n            <MenuItem key={chat.chatId} value={chat.chatId}>\n              {chat.userName} ({chat.chatId})\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function () {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\">Website scanning service</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardContent,\n  TextField,\n  Typography,\n  CardActions,\n  Button,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from \"@material-ui/core\";\nimport { Chat } from \"../../../Types/types\";\n\ntype propsType = {\n  createRequest: (apiUrl: string, url: string, displayUrl: string, keyword: string, email: string) => void;\n};\n\nexport default function ({ createRequest }: propsType) {\n  const [newReq, setNewReq] = useState({ url: \"\", keyword: \"\" });\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [selectedChatId, setSelectedChat] = useState<string>(\"\");\n\n  const loadEmails = () => {\n    fetch(`/notifications/v1/getChats`)\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((chats) => {\n            setChats(chats);\n            setSelectedChat(chats[0].chatId);\n          });\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  useEffect(loadEmails, []);\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\">New request</Typography>\n        <br />\n        <TextField\n          label=\"Url address\"\n          value={newReq.url}\n          onChange={(e) => setNewReq({ ...newReq, url: e.target.value })}\n          style={{ width: \"100%\" }}\n        />\n        <TextField\n          label=\"Keyword\"\n          value={newReq.keyword}\n          onChange={(e) => setNewReq({ ...newReq, keyword: e.target.value })}\n          style={{ width: \"100%\" }}\n        />\n        <br />\n        <br />\n        <FormControl style={{ width: \"100%\" }}>\n          <InputLabel>Notification client</InputLabel>\n          <Select\n            value={selectedChatId}\n            onChange={(e) => {\n              setSelectedChat(e.target.value as string);\n            }}\n          >\n            {chats.map((chat) => (\n              <MenuItem key={chat.chatId} value={chat.chatId}>\n                {chat.userName} ({chat.chatId})\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </CardContent>\n      <CardActions style={{ display: \"flex\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginLeft: \"auto\", marginRight: \"12px\" }}\n          disabled={newReq.url.length === 0 || newReq.keyword.length === 0 || selectedChatId.length === 0}\n          onClick={() => {\n            createRequest(\"/requests/v1/\", newReq.url, \"\", newReq.keyword, selectedChatId);\n            setNewReq({ keyword: \"\", url: \"\" });\n          }}\n        >\n          Add request\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { Dispatch, SetStateAction, useState } from \"react\";\nimport { TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { Chat } from \"../../../../Types/types\";\n\ntype propsType = {\n  newTipsportReq: { apiUrl: string; url: string; displayUrl: string; keyword: string };\n  setNewTipsportReq: (req: { apiUrl: string; url: string; displayUrl: string; keyword: string }) => void;\n  chats: Chat[];\n  selectedChatId: string;\n  setSelectedChat: Dispatch<SetStateAction<string>>;\n};\n\nenum categoryTypes {\n  ROOT = \"ROOT\",\n  CATEGORY = \"CATEGORY\",\n  SELECTION = \"SELECTION\",\n  SUPERSPORT = \"SUPERSPORT\",\n  SUPERGROUP = \"SUPERGROUP\",\n  SPORT = \"SPORT\",\n  GROUP = \"GROUP\",\n  COMPETITION = \"COMPETITION\",\n  MATCH = \"MATCH\",\n}\n\nexport default function ({ newTipsportReq, setNewTipsportReq, chats, selectedChatId, setSelectedChat }: propsType) {\n  if (newTipsportReq.apiUrl !== \"/requests/v1/withStatus/\")\n    setNewTipsportReq({ ...newTipsportReq, apiUrl: \"/requests/v1/withStatus/\" });\n\n  const [category, setCategory] = useState<categoryTypes>(categoryTypes.COMPETITION);\n\n  return (\n    <>\n      <br />\n      <br />\n      <FormControl style={{ width: \"50%\" }}>\n        <InputLabel>Category type</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={category}\n          onChange={(e) => {\n            setCategory(e.target.value as categoryTypes);\n          }}\n        >\n          <MenuItem value={categoryTypes.ROOT}>Root</MenuItem>\n          <MenuItem value={categoryTypes.CATEGORY}>Category</MenuItem>\n          <MenuItem value={categoryTypes.SELECTION}>Selection</MenuItem>\n          <MenuItem value={categoryTypes.SUPERSPORT}>SuperSport</MenuItem>\n          <MenuItem value={categoryTypes.SUPERGROUP}>SuperGroup</MenuItem>\n          <MenuItem value={categoryTypes.SPORT}>Sport</MenuItem>\n          <MenuItem value={categoryTypes.GROUP}>Group</MenuItem>\n          <MenuItem value={categoryTypes.COMPETITION}>Competition</MenuItem>\n          <MenuItem value={categoryTypes.MATCH}>Match</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        label=\"Category URL\"\n        value={newTipsportReq.url}\n        onChange={(e) =>\n          setNewTipsportReq({\n            ...newTipsportReq,\n            url: e.target.value + \"<categorySeparator>\" + category,\n            displayUrl: e.target.value,\n            keyword: \"Watchnig changes\",\n          })\n        }\n        style={{ width: \"100%\" }}\n      />\n      <br />\n      <br />\n      <FormControl style={{ width: \"100%\" }}>\n        <InputLabel>Notification client</InputLabel>\n        <Select\n          value={selectedChatId}\n          onChange={(e) => {\n            setSelectedChat(e.target.value as string);\n          }}\n        >\n          {chats.map((chat) => (\n            <MenuItem key={chat.chatId} value={chat.chatId}>\n              {chat.userName} ({chat.chatId})\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { Chat } from \"../../../../Types/types\";\n\ntype propsType = {\n  newTipsportReq: { apiUrl: string; url: string; displayUrl: string; keyword: string };\n  setNewTipsportReq: (req: { apiUrl: string; url: string; displayUrl: string; keyword: string }) => void;\n  chats: Chat[];\n  selectedChatId: string;\n  setSelectedChat: Dispatch<SetStateAction<string>>;\n};\n\nexport default function ({ newTipsportReq, setNewTipsportReq, chats, selectedChatId, setSelectedChat }: propsType) {\n  const tipsportApiUrl = \"https://m.tipsport.cz/rest/offer/v2/sports?fromResults=false\";\n  if (newTipsportReq.url !== tipsportApiUrl)\n    setNewTipsportReq({ ...newTipsportReq, url: tipsportApiUrl, displayUrl: \"Sports offer in left menu\", keyword: \"\" });\n\n  return (\n    <>\n      <TextField\n        label=\"Keyword\"\n        value={newTipsportReq.keyword}\n        onChange={(e) => setNewTipsportReq({ ...newTipsportReq, keyword: e.target.value })}\n        style={{ width: \"100%\" }}\n      />\n      <br />\n      <br />\n      <FormControl style={{ width: \"100%\" }}>\n        <InputLabel>Notification clinet</InputLabel>\n        <Select\n          value={selectedChatId}\n          onChange={(e) => {\n            setSelectedChat(e.target.value as string);\n          }}\n        >\n          {chats.map((chat) => (\n            <MenuItem key={chat.chatId} value={chat.chatId}>\n              {chat.userName} ({chat.chatId})\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { Chat } from \"../../../../Types/types\";\n\ntype propsType = {\n  newTipsportReq: { apiUrl: string; url: string; displayUrl: string; keyword: string };\n  setNewTipsportReq: (req: { apiUrl: string; url: string; displayUrl: string; keyword: string }) => void;\n  chats: Chat[];\n  selectedChatId: string;\n  setSelectedChat: Dispatch<SetStateAction<string>>;\n};\n\nexport default function ({ newTipsportReq, setNewTipsportReq, chats, selectedChatId, setSelectedChat }: propsType) {\n  return (\n    <>\n      <TextField\n        label=\"Competition URL\"\n        value={newTipsportReq.displayUrl}\n        onChange={(e) =>\n          setNewTipsportReq({\n            ...newTipsportReq,\n            url:\n              e.target.value.length > 0\n                ? `https://betting-scanner-api.herokuapp.com/tipsport/v1/matches?url=${e.target.value}`\n                : \"\",\n            displayUrl: e.target.value,\n          })\n        }\n        style={{ width: \"100%\" }}\n      />\n      <TextField\n        label=\"Keyword\"\n        value={newTipsportReq.keyword}\n        onChange={(e) => setNewTipsportReq({ ...newTipsportReq, keyword: e.target.value })}\n        style={{ width: \"100%\" }}\n      />\n      <br />\n      <br />\n      <FormControl style={{ width: \"100%\" }}>\n        <InputLabel>Email</InputLabel>\n        <Select\n          value={selectedChatId}\n          onChange={(e) => {\n            setSelectedChat(e.target.value as string);\n          }}\n        >\n          {chats.map((chat) => (\n            <MenuItem key={chat.chatId} value={chat.chatId}>\n              {chat.userName} ({chat.chatId})\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, Typography, CardActions, Button, FormControl, Select, MenuItem } from \"@material-ui/core\";\nimport MatchDetailRequest from \"./Tipsport/MatchDetailRequest\";\nimport SportsOfferRequest from \"./Tipsport/SportsOfferRequest\";\nimport MatchesOfferRequest from \"./Tipsport/MatchesOfferRequest\";\nimport NewMatchesWatcher from \"./Tipsport/NewMatchesWatcher\";\nimport { Chat } from \"../../../Types/types\";\n\ntype propsType = {\n  createRequest: (apiUrl: string, url: string, displayUrl: string, keyword: string, email: string) => void;\n};\n\nenum requestTypes {\n  MatchDetails,\n  SportsOffer,\n  MatchesOffer,\n  MatchesWatcher,\n}\n\nexport default function ({ createRequest }: propsType) {\n  const emptyRequest = { apiUrl: \"/requests/v1/\", url: \"\", displayUrl: \"\", keyword: \"\" };\n  const [newTipsportReq, setNewTipsportReq] = useState(emptyRequest);\n  const [selected, setSelected] = useState<requestTypes>(requestTypes.MatchDetails);\n  const [selectedChatId, setSelectedChat] = useState<string>(\"\");\n  const [chats, setChats] = useState<Chat[]>([]);\n\n  const loadEmails = () => {\n    fetch(\"/notifications/v1/getChats\")\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((chats) => {\n            setChats(chats);\n            setSelectedChat(chats[0].chatId);\n          });\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  useEffect(loadEmails, []);\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" style={{ float: \"left\" }}>\n          New request for Tipsport\n        </Typography>\n        <FormControl style={{ float: \"right\" }}>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={selected}\n            onChange={(e) => {\n              setSelected(e.target.value as requestTypes);\n              setNewTipsportReq(emptyRequest);\n            }}\n          >\n            <MenuItem value={requestTypes.MatchDetails}>Tipsport match details</MenuItem>\n            <MenuItem value={requestTypes.SportsOffer}>Tipsport sports offer</MenuItem>\n            <MenuItem value={requestTypes.MatchesOffer}>Tipsport matches offer</MenuItem>\n            <MenuItem value={requestTypes.MatchesWatcher}>Tipsport new matches watcher</MenuItem>\n          </Select>\n        </FormControl>\n        <br />\n        {selected === requestTypes.MatchDetails ? (\n          <MatchDetailRequest\n            newTipsportReq={newTipsportReq}\n            setNewTipsportReq={setNewTipsportReq}\n            chats={chats}\n            selectedChatId={selectedChatId}\n            setSelectedChat={setSelectedChat}\n          />\n        ) : selected === requestTypes.SportsOffer ? (\n          <SportsOfferRequest\n            newTipsportReq={newTipsportReq}\n            setNewTipsportReq={setNewTipsportReq}\n            chats={chats}\n            selectedChatId={selectedChatId}\n            setSelectedChat={setSelectedChat}\n          />\n        ) : selected === requestTypes.MatchesOffer ? (\n          <MatchesOfferRequest\n            newTipsportReq={newTipsportReq}\n            setNewTipsportReq={setNewTipsportReq}\n            chats={chats}\n            selectedChatId={selectedChatId}\n            setSelectedChat={setSelectedChat}\n          />\n        ) : (\n          <NewMatchesWatcher\n            newTipsportReq={newTipsportReq}\n            setNewTipsportReq={setNewTipsportReq}\n            chats={chats}\n            selectedChatId={selectedChatId}\n            setSelectedChat={setSelectedChat}\n          />\n        )}\n      </CardContent>\n      <CardActions style={{ display: \"flex\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={newTipsportReq.url.length === 0 || newTipsportReq.keyword.length === 0 || selectedChatId.length === 0}\n          style={{ marginLeft: \"auto\", marginRight: \"12px\" }}\n          onClick={() => {\n            createRequest(\n              newTipsportReq.apiUrl,\n              newTipsportReq.url,\n              newTipsportReq.displayUrl,\n              newTipsportReq.keyword,\n              selectedChatId\n            );\n            setNewTipsportReq(emptyRequest);\n          }}\n        >\n          Add request\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardContent, Typography, Table, TableRow, TableCell, TableHead, TableBody, Chip } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport { Request } from \"../../../Types/types\";\n\ntype propsType = {\n  requests: Request[];\n  loadRequests: () => void;\n  deleteRequest: (createdDate: string) => void;\n  createRequest: (apiUrl: string, url: string, displayUrl: string, keyword: string, email: string) => void;\n};\n\nexport default function ({ requests, loadRequests, deleteRequest, createRequest }: propsType) {\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\">Current requests</Typography>\n        <br />\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Url</TableCell>\n              <TableCell>Keyword</TableCell>\n              <TableCell>Notification Id</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {requests.map((req) => (\n              <TableRow key={req.createdDate}>\n                <TableCell>\n                  <a href={req.displayUrl} target=\"blank\">\n                    {req.displayUrl}\n                  </a>\n                </TableCell>\n                <TableCell>{req.keyword}</TableCell>\n                <TableCell>{req.chatId}</TableCell>\n                <TableCell>{req.finnished ? <Chip label=\"Finnished\" color=\"primary\" /> : <Chip label=\"Waiting\" />}</TableCell>\n                <TableCell>\n                  <DeleteIcon\n                    style={{ color: \"red\", cursor: \"pointer\", float: \"right\" }}\n                    onClick={() => deleteRequest(req.createdDate)}\n                  />\n                  {req.finnished && (\n                    <AutorenewIcon\n                      style={{ color: \"blue\", cursor: \"pointer\", float: \"right\" }}\n                      onClick={() => createRequest(\"/requests/v1/\", req.scanUrl, req.displayUrl, req.keyword, req.chatId)}\n                    />\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, Typography, Snackbar, List, ListItem } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n// import DeleteIcon from \"@material-ui/icons/Delete\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport { Chat } from \"../../../Types/types\";\n\nexport default function () {\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [openSuccess, setOpenSuccess] = useState(false);\n\n  const loadChats = () => {\n    fetch(`/notifications/v1/getChats`)\n      .then((response) => {\n        if (response.ok) {\n          response.json().then(setChats);\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  // const removeChat = (email: String) => {\n  //   fetch(`/emails/v1/?email=${email}`, { method: \"DELETE\" })\n  //     .then((response) => {\n  //       if (response.ok) {\n  //         setEmails(emails.filter((e) => email !== e));\n  //       } else {\n  //         console.log(response.statusText);\n  //       }\n  //     })\n  //     .catch(console.log);\n  // };\n\n  const testNotification = (chatId: String) => {\n    fetch(`/notifications/v1/test?chatId=${chatId}`, { method: \"POST\" })\n      .then((response) => {\n        if (response.ok) {\n          setOpenSuccess(true);\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  useEffect(loadChats, []);\n\n  console.log(chats);\n\n  return (\n    <>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\">Connected notification clients</Typography>\n          <br />\n          <List>\n            {chats.map((ch) => (\n              <ListItem key={ch.chatId}>\n                {/* <DeleteIcon\n                  // onClick={() => removeChat(e)}\n                  style={{ color: \"red\", cursor: \"pointer\", marginRight: \"4px\" }}\n                ></DeleteIcon>{\" \"} */}\n                <EmailIcon\n                  onClick={() => testNotification(ch.chatId)}\n                  style={{ cursor: \"pointer\", marginRight: \"24px\" }}\n                ></EmailIcon>\n                {ch.userName} ({ch.chatId})\n              </ListItem>\n            ))}\n          </List>\n        </CardContent>\n      </Card>\n      <Snackbar open={openSuccess} autoHideDuration={6000} onClose={() => setOpenSuccess(false)}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={() => setOpenSuccess(false)} severity=\"success\">\n          Test notification was sent successfully.\n        </MuiAlert>\n      </Snackbar>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Request } from \"../../Types/types\";\nimport NewRequestCard from \"./Components/NewRequestCard\";\nimport NewTipsportRequestCard from \"./Components/NewTipsportRequestCard\";\nimport RequestsCard from \"./Components/RequestsCard\";\nimport ChatsCard from \"./Components/ChatsCard\";\n\nexport default function () {\n  const [requests, setRequests] = useState<Request[]>([]);\n\n  const loadRequests = () => {\n    fetch(`/requests/v1/all`)\n      .then((response) => {\n        if (response.ok) {\n          response.json().then(setRequests);\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  const createRequest = (apiUrl: string, url: string, displayUrl: string, keyword: string, email: string) => {\n    fetch(`${apiUrl}?url=${url}&keyword=${keyword}&matchUrl=${displayUrl}&email=${email}`, {\n      method: \"post\",\n    })\n      .then((response) => {\n        if (response.ok)\n          response.json().then((req: Request) => {\n            setRequests([req, ...requests]);\n          });\n        else {\n          console.log(response.statusText);\n          alert(\"There was an error during creating a request\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"There was an error during creating a request\");\n      });\n  };\n\n  const deleteRequest = (createdDate: string) => {\n    fetch(`/requests/v1/?date=${createdDate}`, {\n      method: \"delete\",\n    })\n      .then((response) => {\n        if (response.ok) {\n          setRequests(requests.filter((req) => req.createdDate !== createdDate));\n        } else {\n          console.log(response.statusText);\n          alert(\"There was an error during deleting a request\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"There was an error during deleting a request\");\n      });\n  };\n\n  useEffect(loadRequests, []);\n\n  return (\n    <Grid container spacing={3} className=\"page-container\">\n      {requests.length === 0 && <Grid item xs={12} lg={1}></Grid>}\n      <Grid item xs={12} lg={5}>\n        <NewRequestCard createRequest={createRequest} />\n        <br />\n        <br />\n        <NewTipsportRequestCard createRequest={createRequest} />\n      </Grid>\n      {requests.length > 0 && (\n        <Grid item xs={12} lg={7}>\n          <RequestsCard\n            requests={requests}\n            deleteRequest={deleteRequest}\n            loadRequests={loadRequests}\n            createRequest={createRequest}\n          />\n        </Grid>\n      )}\n      <Grid item xs={12} lg={5}>\n        <ChatsCard />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Pages/Home/Home\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <article>\n        <Home />\n      </article>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.css\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider\n      theme={createMuiTheme({\n        palette: {\n          primary: { main: \"#343a40\" },\n          secondary: { main: \"#ffffff\" },\n        },\n      })}\n    >\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}