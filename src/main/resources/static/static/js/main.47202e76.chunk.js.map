{"version":3,"sources":["Components/Header.tsx","Pages/Home/Home.tsx","Pages/Requests/Requests.tsx","Pages/Administration/Administration.tsx","App.tsx","index.tsx"],"names":["deselectedButtonStyle","color","fontSize","margin","selectedButtonStyle","location","useLocation","AppBar","position","Toolbar","to","style","textDecoration","Button","pathname","useState","url","keyword","newReq","setNewReq","newTipsportReq","setNewTipsportReq","requests","setRequests","matches","setMatches","createRequest","displayUrl","fetch","method","then","response","ok","json","req","console","log","statusText","alert","catch","err","useEffect","Grid","container","spacing","className","length","item","xs","lg","Card","CardContent","Typography","variant","TextField","label","value","onChange","e","target","width","CardActions","display","marginLeft","marginRight","disabled","onClick","onBlur","List","map","match","ListItem","key","id","cursor","ListItemText","primary","description","Table","TableHead","TableRow","TableCell","TableBody","createdDate","href","float","filter","App","Header","exact","path","component","Home","Requests","Administration","ReactDOM","render","StrictMode","theme","createMuiTheme","palette","main","secondary","document","getElementById"],"mappings":"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","file":"static/js/main.47202e76.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst deselectedButtonStyle = { color: \"rgba(255, 255, 255, 0.5)\", fontSize: \"14px\", margin: \"0\" };\nconst selectedButtonStyle = { ...deselectedButtonStyle, color: \"#FFFFFF\" };\n\nexport default function () {\n  let location = useLocation();\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Button style={location.pathname === \"/\" ? selectedButtonStyle : deselectedButtonStyle}>\n            <HomeIcon />\n            &nbsp; Home\n          </Button>\n        </Link>\n        <Link to=\"/requests\" style={{ textDecoration: \"none\" }}>\n          <Button style={location.pathname === \"/requests\" ? selectedButtonStyle : deselectedButtonStyle}>\n            <ListAltIcon />\n            &nbsp; Requests\n          </Button>\n        </Link>\n        <Link to=\"/administration\" style={{ textDecoration: \"none\" }}>\n          <Button style={location.pathname === \"/administration\" ? selectedButtonStyle : deselectedButtonStyle}>\n            <SettingsIcon />\n            &nbsp; Administration\n          </Button>\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  CardActions,\n  Typography,\n  TableHead,\n  Table,\n  TableRow,\n  TableCell,\n  TableBody,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Request, Match } from \"../../Types/types\";\n\nexport default function () {\n  const [newReq, setNewReq] = useState({ url: \"\", keyword: \"\" });\n  const [newTipsportReq, setNewTipsportReq] = useState({ url: \"\", keyword: \"\" });\n  const [requests, setRequests] = useState<Request[]>([]);\n  const [matches, setMatches] = useState<Match[]>([]);\n\n  const loadRequests = () => {\n    fetch(`/requests/v1/all`)\n      .then((response) => {\n        if (response.ok) {\n          response.json().then(setRequests);\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  const createRequest = (url: string, displayUrl: string, keyword: string) => {\n    fetch(`/requests/v1/?url=${url}&keyword=${keyword}&matchUrl=${displayUrl}`, {\n      method: \"post\",\n    })\n      .then((response) => {\n        if (response.ok)\n          response.json().then((req: Request) => {\n            setRequests([...requests, req]);\n          });\n        else {\n          console.log(response.statusText);\n          alert(\"There was an error during creating a request\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"There was an error during creating a request\");\n      });\n  };\n\n  const loadMatches = (url: string) => {\n    fetch(`/tipsport/v1/matches?url=${url}`)\n      .then((response) => {\n        if (response.ok) {\n          response.json().then(setMatches);\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  const deleteRequest = (createdDate: string) => {\n    fetch(`/requests/v1/?date=${createdDate}&fromFinished=false`, {\n      method: \"delete\",\n    })\n      .then((response) => {\n        if (response.ok) {\n          setRequests(requests.filter((req) => req.createdDate !== createdDate));\n        } else {\n          console.log(response.statusText);\n          alert(\"There was an error during deleting a request\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"There was an error during deleting a request\");\n      });\n  };\n\n  useEffect(loadRequests, []);\n  console.log(matches);\n  return (\n    <Grid container spacing={3} className=\"page-container\">\n      {requests.length === 0 && <Grid item xs={12} lg={3}></Grid>}\n      <Grid item xs={12} lg={5}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\">New request</Typography>\n            <br />\n            <TextField\n              label=\"Url address\"\n              value={newReq.url}\n              onChange={(e) => setNewReq({ ...newReq, url: e.target.value })}\n              style={{ width: \"100%\" }}\n            />\n            <TextField\n              label=\"Keyword\"\n              value={newReq.keyword}\n              onChange={(e) => setNewReq({ ...newReq, keyword: e.target.value })}\n              style={{ width: \"100%\" }}\n            />\n          </CardContent>\n          <CardActions style={{ display: \"flex\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginLeft: \"auto\", marginRight: \"12px\" }}\n              disabled={newReq.url.length === 0 || newReq.keyword.length === 0}\n              onClick={() => {\n                createRequest(newReq.url, \"\", newReq.keyword);\n                setNewReq({ keyword: \"\", url: \"\" });\n              }}\n            >\n              Add request\n            </Button>\n          </CardActions>\n        </Card>\n        <br />\n        <br />\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\">New request for tipsport match details</Typography>\n            <br />\n            <TextField label=\"Category URL\" style={{ width: \"100%\" }} onBlur={(e) => loadMatches(e.target.value)} />\n            {matches.length === 0 ? (\n              <>\n                <br />\n                <br />\n              </>\n            ) : (\n              <List>\n                {matches.map((match) => (\n                  <ListItem\n                    key={match.id}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => {\n                      setNewTipsportReq({\n                        ...newTipsportReq,\n                        url: `https://m.tipsport.cz/rest/offer/v1/matches/${match.id}/event-tables?fromResults=false`,\n                      });\n                    }}\n                  >\n                    <ListItemText primary={match.description} />\n                  </ListItem>\n                ))}\n              </List>\n            )}\n\n            <TextField\n              label=\"Url address\"\n              disabled={true}\n              value={newTipsportReq.url}\n              onChange={(e) => setNewTipsportReq({ ...newTipsportReq, url: e.target.value })}\n              style={{ width: \"100%\" }}\n            />\n            <TextField\n              label=\"Keyword\"\n              value={newTipsportReq.keyword}\n              onChange={(e) => setNewTipsportReq({ ...newTipsportReq, keyword: e.target.value })}\n              style={{ width: \"100%\" }}\n            />\n          </CardContent>\n          <CardActions style={{ display: \"flex\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={newTipsportReq.url.length === 0 || newTipsportReq.keyword.length === 0}\n              style={{ marginLeft: \"auto\", marginRight: \"12px\" }}\n              onClick={() => {\n                createRequest(newTipsportReq.url, \"\", newTipsportReq.keyword);\n                setNewTipsportReq({ keyword: \"\", url: \"\" });\n              }}\n            >\n              Add request\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n      {requests.length > 0 && (\n        <Grid item xs={12} lg={7}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\">Current requests</Typography>\n              <br />\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Url</TableCell>\n                    <TableCell>Keyword</TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {requests.map((req) => (\n                    <TableRow key={req.createdDate}>\n                      <TableCell>\n                        <a href={req.displayUrl} target=\"blank\">\n                          {req.displayUrl}\n                        </a>\n                      </TableCell>\n                      <TableCell>{req.keyword}</TableCell>\n                      <TableCell>\n                        <DeleteIcon\n                          style={{ color: \"red\", cursor: \"pointer\", float: \"right\" }}\n                          onClick={() => deleteRequest(req.createdDate)}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n","import React from \"react\";\n\nexport default function () {\n  return <div>Requests</div>;\n}\n","import React from \"react\";\n\nexport default function () {\n  return <div>Administration</div>;\n}\n","import React from \"react\";\nimport Header from \"./Components/Header\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home/Home\";\nimport Requests from \"./Pages/Requests/Requests\";\nimport Administration from \"./Pages/Administration/Administration\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Header />\n      <article>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/requests\" component={Requests} />\n          <Route exact path=\"/administration\" component={Administration} />\n        </Switch>\n      </article>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.css\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider\n      theme={createMuiTheme({\n        palette: {\n          primary: { main: \"#343a40\" },\n          secondary: { main: \"#ffffff\" },\n        },\n      })}\n    >\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}