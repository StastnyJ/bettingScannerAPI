{"version":3,"sources":["Pages/Home/Components/NewTipsportRequestCard.tsx","Components/Header.tsx","Pages/Home/Components/NewRequestCard.tsx","Pages/Home/Components/Tipsport/MatchDetailRequest.tsx","Pages/Home/Components/Tipsport/SportsOfferRequest.tsx","Pages/Home/Components/Tipsport/MatchesOfferRequest.tsx","Pages/Home/Components/RequestsCard.tsx","Pages/Home/Components/EmailingCard.tsx","Pages/Home/Home.tsx","App.tsx","index.tsx"],"names":["requestTypes","AppBar","position","Toolbar","Typography","variant","createRequest","useState","url","keyword","newReq","setNewReq","emails","setEmails","selectedEmail","setSelectedEmail","useEffect","fetch","then","response","ok","json","console","log","statusText","catch","Card","CardContent","TextField","label","value","onChange","e","target","style","width","FormControl","InputLabel","Select","map","mail","MenuItem","key","CardActions","display","Button","color","marginLeft","marginRight","disabled","length","onClick","newTipsportReq","setNewTipsportReq","matches","setMatches","onBlur","List","match","ListItem","id","cursor","displayUrl","matchUrl","ListItemText","primary","description","apiUrl","emptyRequest","MatchDetails","selected","setSelected","float","labelId","SportsOffer","MatchesOffer","MatchDetailRequest","SportsOfferRequest","MatchesOfferRequest","requests","deleteRequest","loadRequests","Table","TableHead","TableRow","TableCell","TableBody","req","createdDate","href","email","finnished","Chip","scanUrl","newMail","setNewMail","openSuccess","setOpenSuccess","method","filter","Snackbar","open","autoHideDuration","onClose","elevation","severity","setRequests","alert","err","Grid","container","spacing","className","item","xs","lg","NewRequestCard","NewTipsportRequestCard","RequestsCard","EmailingCard","App","Header","Home","ReactDOM","render","StrictMode","theme","createMuiTheme","palette","main","secondary","document","getElementById"],"mappings":"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","file":"static/js/main.dca773ad.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, Typography, CardActions, Button, FormControl, Select, MenuItem } from \"@material-ui/core\";\nimport MatchDetailRequest from \"./Tipsport/MatchDetailRequest\";\nimport SportsOfferRequest from \"./Tipsport/SportsOfferRequest\";\nimport MatchesOfferRequest from \"./Tipsport/MatchesOfferRequest\";\n\ntype propsType = {\n  createRequest: (url: string, displayUrl: string, keyword: string, email: string) => void;\n};\n\nenum requestTypes {\n  MatchDetails,\n  SportsOffer,\n  MatchesOffer,\n}\n\nexport default function ({ createRequest }: propsType) {\n  const emptyRequest = { url: \"\", displayUrl: \"\", keyword: \"\" };\n  const [newTipsportReq, setNewTipsportReq] = useState(emptyRequest);\n  const [selected, setSelected] = useState(requestTypes.MatchDetails);\n  const [selectedEmail, setSelectedEmail] = useState<string>(\"\");\n  const [emails, setEmails] = useState<string[]>([]);\n\n  const loadEmails = () => {\n    fetch(`/emails/v1/`)\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((emails) => {\n            setEmails(emails);\n            setSelectedEmail(emails[0]);\n          });\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  useEffect(loadEmails, []);\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" style={{ float: \"left\" }}>\n          New request for Tipsport\n        </Typography>\n        <FormControl style={{ float: \"right\" }}>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={selected}\n            onChange={(e) => {\n              setSelected(e.target.value as requestTypes);\n              setNewTipsportReq(emptyRequest);\n            }}\n          >\n            <MenuItem value={requestTypes.MatchDetails}>Tipsport match details</MenuItem>\n            <MenuItem value={requestTypes.SportsOffer}>Tipsport sports offer</MenuItem>\n            <MenuItem value={requestTypes.MatchesOffer}>Tipsport matches offer</MenuItem>\n          </Select>\n        </FormControl>\n        <br />\n        {selected === requestTypes.MatchDetails ? (\n          <MatchDetailRequest\n            newTipsportReq={newTipsportReq}\n            setNewTipsportReq={setNewTipsportReq}\n            emails={emails}\n            selectedEmail={selectedEmail}\n            setSelectedEmail={setSelectedEmail}\n          />\n        ) : selected === requestTypes.SportsOffer ? (\n          <SportsOfferRequest\n            newTipsportReq={newTipsportReq}\n            setNewTipsportReq={setNewTipsportReq}\n            emails={emails}\n            selectedEmail={selectedEmail}\n            setSelectedEmail={setSelectedEmail}\n          />\n        ) : (\n          <MatchesOfferRequest\n            newTipsportReq={newTipsportReq}\n            setNewTipsportReq={setNewTipsportReq}\n            emails={emails}\n            selectedEmail={selectedEmail}\n            setSelectedEmail={setSelectedEmail}\n          />\n        )}\n      </CardContent>\n      <CardActions style={{ display: \"flex\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={newTipsportReq.url.length === 0 || newTipsportReq.keyword.length === 0 || selectedEmail.length === 0}\n          style={{ marginLeft: \"auto\", marginRight: \"12px\" }}\n          onClick={() => {\n            createRequest(newTipsportReq.url, newTipsportReq.displayUrl, newTipsportReq.keyword, selectedEmail);\n            setNewTipsportReq({ keyword: \"\", url: \"\", displayUrl: \"\" });\n          }}\n        >\n          Add request\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function () {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\">Website scanning service</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardContent,\n  TextField,\n  Typography,\n  CardActions,\n  Button,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from \"@material-ui/core\";\n\ntype propsType = {\n  createRequest: (url: string, displayUrl: string, keyword: string, email: string) => void;\n};\n\nexport default function ({ createRequest }: propsType) {\n  const [newReq, setNewReq] = useState({ url: \"\", keyword: \"\" });\n  const [emails, setEmails] = useState<string[]>([]);\n  const [selectedEmail, setSelectedEmail] = useState<string>(\"\");\n\n  const loadEmails = () => {\n    fetch(`/emails/v1/`)\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((emails) => {\n            setEmails(emails);\n            setSelectedEmail(emails[0]);\n          });\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  useEffect(loadEmails, []);\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\">New request</Typography>\n        <br />\n        <TextField\n          label=\"Url address\"\n          value={newReq.url}\n          onChange={(e) => setNewReq({ ...newReq, url: e.target.value })}\n          style={{ width: \"100%\" }}\n        />\n        <TextField\n          label=\"Keyword\"\n          value={newReq.keyword}\n          onChange={(e) => setNewReq({ ...newReq, keyword: e.target.value })}\n          style={{ width: \"100%\" }}\n        />\n        <br />\n        <br />\n        <FormControl style={{ width: \"100%\" }}>\n          <InputLabel>Email</InputLabel>\n          <Select\n            value={selectedEmail}\n            onChange={(e) => {\n              setSelectedEmail(e.target.value as string);\n            }}\n          >\n            {emails.map((mail) => (\n              <MenuItem key={mail} value={mail}>\n                {mail}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </CardContent>\n      <CardActions style={{ display: \"flex\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginLeft: \"auto\", marginRight: \"12px\" }}\n          disabled={newReq.url.length === 0 || newReq.keyword.length === 0 || selectedEmail.length === 0}\n          onClick={() => {\n            createRequest(newReq.url, \"\", newReq.keyword, selectedEmail);\n            setNewReq({ keyword: \"\", url: \"\" });\n          }}\n        >\n          Add request\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useState, Dispatch, SetStateAction } from \"react\";\nimport { TextField, List, ListItem, ListItemText, FormControl, Select, InputLabel, MenuItem } from \"@material-ui/core\";\nimport { Match } from \"../../../../Types/types\";\n\ntype propsType = {\n  newTipsportReq: { url: string; displayUrl: string; keyword: string };\n  setNewTipsportReq: (req: { url: string; displayUrl: string; keyword: string }) => void;\n  emails: string[];\n  selectedEmail: string;\n  setSelectedEmail: Dispatch<SetStateAction<string>>;\n};\n\nexport default function ({ newTipsportReq, setNewTipsportReq, emails, selectedEmail, setSelectedEmail }: propsType) {\n  const [matches, setMatches] = useState<Match[]>([]);\n\n  const loadMatches = (url: string) => {\n    if (url.length >= 0) {\n      fetch(`/tipsport/v1/matches?url=${url}`)\n        .then((response) => {\n          if (response.ok) {\n            response.json().then(setMatches);\n          } else {\n            console.log(response.statusText);\n          }\n        })\n        .catch(console.log);\n    }\n  };\n\n  return (\n    <>\n      <TextField label=\"Category URL\" style={{ width: \"100%\" }} onBlur={(e) => loadMatches(e.target.value)} />\n      {matches.length === 0 ? (\n        <>\n          <br />\n          <br />\n        </>\n      ) : (\n        <List>\n          {matches.map((match) => (\n            <ListItem\n              key={match.id}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                setNewTipsportReq({\n                  ...newTipsportReq,\n                  url: `https://m.tipsport.cz/rest/offer/v1/matches/${match.id}/event-tables?fromResults=false`,\n                  displayUrl: match.matchUrl,\n                });\n              }}\n            >\n              <ListItemText primary={match.description} />\n            </ListItem>\n          ))}\n        </List>\n      )}\n\n      <TextField\n        label=\"Url address\"\n        disabled={true}\n        value={newTipsportReq.url}\n        onChange={(e) => setNewTipsportReq({ ...newTipsportReq, url: e.target.value })}\n        style={{ width: \"100%\" }}\n      />\n      <TextField\n        label=\"Keyword\"\n        value={newTipsportReq.keyword}\n        onChange={(e) => setNewTipsportReq({ ...newTipsportReq, keyword: e.target.value })}\n        style={{ width: \"100%\" }}\n      />\n      <br />\n      <br />\n      <FormControl style={{ width: \"100%\" }}>\n        <InputLabel>Email</InputLabel>\n        <Select\n          value={selectedEmail}\n          onChange={(e) => {\n            setSelectedEmail(e.target.value as string);\n          }}\n        >\n          {emails.map((mail) => (\n            <MenuItem key={mail} value={mail}>\n              {mail}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\ntype propsType = {\n  newTipsportReq: { url: string; displayUrl: string; keyword: string };\n  setNewTipsportReq: (req: { url: string; displayUrl: string; keyword: string }) => void;\n  emails: string[];\n  selectedEmail: string;\n  setSelectedEmail: Dispatch<SetStateAction<string>>;\n};\n\nexport default function ({ newTipsportReq, setNewTipsportReq, emails, selectedEmail, setSelectedEmail }: propsType) {\n  const apiUrl = \"https://m.tipsport.cz/rest/offer/v2/sports?fromResults=false\";\n  if (newTipsportReq.url !== apiUrl) setNewTipsportReq({ url: apiUrl, displayUrl: \"Sports offer in left menu\", keyword: \"\" });\n\n  return (\n    <>\n      <TextField\n        label=\"Keyword\"\n        value={newTipsportReq.keyword}\n        onChange={(e) => setNewTipsportReq({ ...newTipsportReq, keyword: e.target.value })}\n        style={{ width: \"100%\" }}\n      />\n      <br />\n      <br />\n      <FormControl style={{ width: \"100%\" }}>\n        <InputLabel>Email</InputLabel>\n        <Select\n          value={selectedEmail}\n          onChange={(e) => {\n            setSelectedEmail(e.target.value as string);\n          }}\n        >\n          {emails.map((mail) => (\n            <MenuItem key={mail} value={mail}>\n              {mail}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { TextField, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\ntype propsType = {\n  newTipsportReq: { url: string; displayUrl: string; keyword: string };\n  setNewTipsportReq: (req: { url: string; displayUrl: string; keyword: string }) => void;\n  emails: string[];\n  selectedEmail: string;\n  setSelectedEmail: Dispatch<SetStateAction<string>>;\n};\n\nexport default function ({ newTipsportReq, setNewTipsportReq, emails, selectedEmail, setSelectedEmail }: propsType) {\n  return (\n    <>\n      <TextField\n        label=\"Competition URL\"\n        value={newTipsportReq.displayUrl}\n        onChange={(e) =>\n          setNewTipsportReq({\n            ...newTipsportReq,\n            url:\n              e.target.value.length > 0\n                ? `https://betting-scanner-api.herokuapp.com/tipsport/v1/matches?url=${e.target.value}`\n                : \"\",\n            displayUrl: e.target.value,\n          })\n        }\n        style={{ width: \"100%\" }}\n      />\n      <TextField\n        label=\"Keyword\"\n        value={newTipsportReq.keyword}\n        onChange={(e) => setNewTipsportReq({ ...newTipsportReq, keyword: e.target.value })}\n        style={{ width: \"100%\" }}\n      />\n      <br />\n      <br />\n      <FormControl style={{ width: \"100%\" }}>\n        <InputLabel>Email</InputLabel>\n        <Select\n          value={selectedEmail}\n          onChange={(e) => {\n            setSelectedEmail(e.target.value as string);\n          }}\n        >\n          {emails.map((mail) => (\n            <MenuItem key={mail} value={mail}>\n              {mail}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Card, CardContent, Typography, Table, TableRow, TableCell, TableHead, TableBody, Chip } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport { Request } from \"../../../Types/types\";\n\ntype propsType = {\n  requests: Request[];\n  loadRequests: () => void;\n  deleteRequest: (createdDate: string) => void;\n  createRequest: (url: string, displayUrl: string, keyword: string, email: string) => void;\n};\n\nexport default function ({ requests, loadRequests, deleteRequest, createRequest }: propsType) {\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\">Current requests</Typography>\n        <br />\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Url</TableCell>\n              <TableCell>Keyword</TableCell>\n              <TableCell>Email</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {requests.map((req) => (\n              <TableRow key={req.createdDate}>\n                <TableCell>\n                  <a href={req.displayUrl} target=\"blank\">\n                    {req.displayUrl}\n                  </a>\n                </TableCell>\n                <TableCell>{req.keyword}</TableCell>\n                <TableCell>{req.email}</TableCell>\n                <TableCell>{req.finnished ? <Chip label=\"Finnished\" color=\"primary\" /> : <Chip label=\"Waiting\" />}</TableCell>\n                <TableCell>\n                  <DeleteIcon\n                    style={{ color: \"red\", cursor: \"pointer\", float: \"right\" }}\n                    onClick={() => deleteRequest(req.createdDate)}\n                  />\n                  {req.finnished && (\n                    <AutorenewIcon\n                      style={{ color: \"blue\", cursor: \"pointer\", float: \"right\" }}\n                      onClick={() => createRequest(req.scanUrl, req.displayUrl, req.keyword, req.email)}\n                    />\n                  )}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, Typography, TextField, CardActions, Button, Snackbar, List, ListItem } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EmailIcon from \"@material-ui/icons/Email\";\n\nexport default function () {\n  const [emails, setEmails] = useState<String[]>([]);\n  const [newMail, setNewMail] = useState(\"\");\n  const [openSuccess, setOpenSuccess] = useState(false);\n\n  const loadEmails = () => {\n    fetch(`/emails/v1/`)\n      .then((response) => {\n        if (response.ok) {\n          response.json().then(setEmails);\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  const addEmail = (email: String) => {\n    fetch(`/emails/v1/?email=${email}`, { method: \"POST\" })\n      .then((response) => {\n        if (response.ok) {\n          setEmails([...emails, email]);\n          setNewMail(\"\");\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  const removeEmail = (email: String) => {\n    fetch(`/emails/v1/?email=${email}`, { method: \"DELETE\" })\n      .then((response) => {\n        if (response.ok) {\n          setEmails(emails.filter((e) => email !== e));\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  const testEmail = (email: String) => {\n    fetch(`/emails/v1/test?email=${email}`, { method: \"POST\" })\n      .then((response) => {\n        if (response.ok) {\n          setOpenSuccess(true);\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  useEffect(loadEmails, []);\n\n  return (\n    <>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\">Emailing service settings</Typography>\n          <br />\n          <List>\n            {emails.map((e) => (\n              <ListItem>\n                <DeleteIcon\n                  onClick={() => removeEmail(e)}\n                  style={{ color: \"red\", cursor: \"pointer\", marginRight: \"4px\" }}\n                ></DeleteIcon>{\" \"}\n                <EmailIcon onClick={() => testEmail(e)} style={{ cursor: \"pointer\", marginRight: \"24px\" }}></EmailIcon>\n                {e}\n              </ListItem>\n            ))}\n          </List>\n          <TextField\n            label=\"Email address\"\n            value={newMail}\n            onChange={(e) => setNewMail(e.target.value)}\n            style={{ width: \"100%\" }}\n          />\n        </CardContent>\n        <CardActions style={{ display: \"flex\" }}>\n          <div style={{ marginLeft: \"auto\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: \"12px\" }}\n              disabled={newMail.length === 0}\n              onClick={() => {\n                addEmail(newMail);\n              }}\n            >\n              Add email address\n            </Button>\n          </div>\n        </CardActions>\n      </Card>\n      <Snackbar open={openSuccess} autoHideDuration={6000} onClose={() => setOpenSuccess(false)}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={() => setOpenSuccess(false)} severity=\"success\">\n          Test email was sent successfully.\n        </MuiAlert>\n      </Snackbar>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Request } from \"../../Types/types\";\nimport NewRequestCard from \"./Components/NewRequestCard\";\nimport NewTipsportRequestCard from \"./Components/NewTipsportRequestCard\";\nimport RequestsCard from \"./Components/RequestsCard\";\nimport EmailingCard from \"./Components/EmailingCard\";\n\nexport default function () {\n  const [requests, setRequests] = useState<Request[]>([]);\n\n  const loadRequests = () => {\n    fetch(`/requests/v1/all`)\n      .then((response) => {\n        if (response.ok) {\n          response.json().then(setRequests);\n        } else {\n          console.log(response.statusText);\n        }\n      })\n      .catch(console.log);\n  };\n\n  const createRequest = (url: string, displayUrl: string, keyword: string, email: string) => {\n    fetch(`/requests/v1/?url=${url}&keyword=${keyword}&matchUrl=${displayUrl}&email=${email}`, {\n      method: \"post\",\n    })\n      .then((response) => {\n        if (response.ok)\n          response.json().then((req: Request) => {\n            setRequests([req, ...requests]);\n          });\n        else {\n          console.log(response.statusText);\n          alert(\"There was an error during creating a request\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"There was an error during creating a request\");\n      });\n  };\n\n  const deleteRequest = (createdDate: string) => {\n    fetch(`/requests/v1/?date=${createdDate}`, {\n      method: \"delete\",\n    })\n      .then((response) => {\n        if (response.ok) {\n          setRequests(requests.filter((req) => req.createdDate !== createdDate));\n        } else {\n          console.log(response.statusText);\n          alert(\"There was an error during deleting a request\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"There was an error during deleting a request\");\n      });\n  };\n\n  useEffect(loadRequests, []);\n\n  return (\n    <Grid container spacing={3} className=\"page-container\">\n      {requests.length === 0 && <Grid item xs={12} lg={1}></Grid>}\n      <Grid item xs={12} lg={5}>\n        <NewRequestCard createRequest={createRequest} />\n        <br />\n        <br />\n        <NewTipsportRequestCard createRequest={createRequest} />\n      </Grid>\n      {requests.length > 0 && (\n        <Grid item xs={12} lg={7}>\n          <RequestsCard\n            requests={requests}\n            deleteRequest={deleteRequest}\n            loadRequests={loadRequests}\n            createRequest={createRequest}\n          />\n        </Grid>\n      )}\n      <Grid item xs={12} lg={5}>\n        <EmailingCard />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Pages/Home/Home\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <article>\n        <Home />\n      </article>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.css\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider\n      theme={createMuiTheme({\n        palette: {\n          primary: { main: \"#343a40\" },\n          secondary: { main: \"#ffffff\" },\n        },\n      })}\n    >\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}